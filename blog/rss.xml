<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>집사의고민 Blog</title>
        <link>https://zip-go.github.io/blog</link>
        <description>집사의고민 Blog</description>
        <lastBuildDate>Sun, 30 Jul 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[restassured 와 restdocs에 swagger ui 곁들이기]]></title>
            <link>https://zip-go.github.io/blog/2</link>
            <guid>https://zip-go.github.io/blog/2</guid>
            <pubDate>Sun, 30 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[안녕하세요, 집사의고민 백엔드 개발자 로지입니다. 이번 글에서는 저희 팀이 선택한 API 문서화 방법을 소개하고 어떻게 적용했는지 알려드리려고해요.]]></description>
            <content:encoded><![CDATA[<p>안녕하세요, 집사의고민 백엔드 개발자 로지입니다. 이번 글에서는 저희 팀이 선택한 API 문서화 방법을 소개하고 어떻게 적용했는지 알려드리려고해요.</p><hr><p>웹 애플리케이션 API를 구현하고 관리하게 되면 문서화에 어떤 기술을 활용할지 고민하게되는데요,
스프링 진영에는 다음 기술들을 주로 고려하는 것 같습니다.</p><ul><li>Spring Restdocs</li><li>Swagger Generator</li></ul><p>결론적으로, 이 둘 중 하나를 써도 되지만 저희 팀은 두 기술을 모두 활용해보기로 했습니다.</p><p>저희 팀은 먼저, 실제로 호출되는 API와 문서가 동기화되는 restdocs를 사용하기로 결정했습니다. 하지만 기존에 restdocs를 사용해본 경험이 있는 크루들은 restdocs의 asscidoc 이 swagger ui에 비해 화면/기능에 있어 실용성이 부족하다고 생각했습니다.</p><p>이 부분을 절충하기 위해, swagger generator에서 ui를 생성하는 기능만을 사용해 restdocs와 함께 사용해보는 것으로 결정하게 되었습니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="필요한-도구들">필요한 도구들<a href="#필요한-도구들" class="hash-link" aria-label="Direct link to 필요한 도구들" title="Direct link to 필요한 도구들">​</a></h2><ul><li>restassured (인수테스트 도구): 저희 팀은 인수테스트를 수행해 restdocs를 발행합니다. 인수테스트에 restassured라는 http 클라이언트 테스트 도구를 사용합니다.</li><li>restdocs (문서화도구): restassured 테스트를 진행하며 API의 정보를 adoc으로 발행합니다.</li><li><strong><a href="https://github.com/ePages-de/restdocs-api-spec" target="_blank" rel="noopener noreferrer">restdocs-api-spec</a>:</strong> restdocs에서 만들어준 adoc으로는 바로 swagger UI를 만들 수 없습니다. swagger ui를 발행할 수 있도록, adoc을 open api spec으로 변환해주는 도구입니다.</li><li><strong><a href="https://github.com/int128/gradle-swagger-generator-plugin" target="_blank" rel="noopener noreferrer">gradle-swagger-generator-plugin</a> :</strong> adoc에서 변환된 <strong>open api spec으로부터 swagger ui를</strong> 만드는데 사용할 도구입니다.</li></ul><p>눈치채셨겠지만, 테스트부터 ui를 만드는 데까지 사용하는 순서대로 도구를 소개해드렸어요.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="팀-개발-환경">팀 개발 환경<a href="#팀-개발-환경" class="hash-link" aria-label="Direct link to 팀 개발 환경" title="Direct link to 팀 개발 환경">​</a></h2><p>저희 팀은 다음 환경에서 작업을 진행했습니다!</p><ul><li>java 17</li><li>Spring boot 3</li><li>gradle 8.2.1</li><li>intellij idea</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="흐름-보기">흐름 보기<a href="#흐름-보기" class="hash-link" aria-label="Direct link to 흐름 보기" title="Direct link to 흐름 보기">​</a></h2><p>자세한 설정까지는 아니더라도, 코드로 흐름을 본다면 이 글을 읽기가 더 수월할 것 같아 먼저 코드 조각들을 보여드리려고 합니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="restassured로-테스트하는-코드">RestAssured로 테스트하는 코드<a href="#restassured로-테스트하는-코드" class="hash-link" aria-label="Direct link to RestAssured로 테스트하는 코드" title="Direct link to RestAssured로 테스트하는 코드">​</a></h3><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token annotation punctuation" style="color:#393A34">@Test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#4B0082">void</span><span class="token plain"> 파라미터에_이름을_넣고_요청한다</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// given</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">var</span><span class="token plain"> 요청_준비 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">contentType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">성공_응답_문서_만들기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello-rosie-world-성공"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// when</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">var</span><span class="token plain"> 응답 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 요청_준비</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">when</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pathParam</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"김크루"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/rosie/{name}"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    응답</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assertThat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">statusCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">OK</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>RestAssured 의 given, when, then 메서드를 사용해서 테스트를 진행합니다.
<code>요청_준비</code> 변수를 만드는 마지막줄에 <code>filter</code> 메서드에 RestDocs가 문서를 만들수 있도록 다음과 같이 명시해줍니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#4B0082">private</span><span class="token plain"> </span><span class="token class-name">RestDocumentationFilter</span><span class="token plain"> 성공_응답_문서_만들기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> 제목</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">document</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">제목</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">responseSchema</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">성공_응답_형식</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">pathParameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">parameterWithName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"놀러와주신 분의 성함"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">responseFields</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">fieldWithPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"messages"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"환영의 단어들"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">fieldWithPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ps"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지가 추가로 전하는 말"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">optional</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이 테스트를 실행하면, restdocs가 adoc을 만들어줍니다.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/92dcaebd-5baf-4c59-aa2c-d499e04f1a80/image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="open-api-스펙으로-변환하기">open api 스펙으로 변환하기<a href="#open-api-스펙으로-변환하기" class="hash-link" aria-label="Direct link to open api 스펙으로 변환하기" title="Direct link to open api 스펙으로 변환하기">​</a></h3><p>만들어진 adoc 파일은 다음과 같은데요, swagger UI에 활용할수 있도록 openapi 형식으로 변환해줍니다.
openapi3 태스크를 실행하면 open api 3.0 스펙으로 생성돼요.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/a76b6ca3-d2bb-4517-8fef-d20d16123868/image.png" class="img_ev3q"></p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/fa27f6f6-0934-4094-a5cf-0b3a35f90554/image.png" class="img_ev3q"></p><p>이렇게 만든 문서는 다음 화면에 대응될 예정입니다 :D</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/3fcb339f-7d3d-4fb9-aabb-83989d63d7b1/image.png" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="buildgradle-설정">build.gradle 설정<a href="#buildgradle-설정" class="hash-link" aria-label="Direct link to build.gradle 설정" title="Direct link to build.gradle 설정">​</a></h2><p>제가 사용한 그래들 스크립트입니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="플러그인">플러그인<a href="#플러그인" class="hash-link" aria-label="Direct link to 플러그인" title="Direct link to 플러그인">​</a></h3><div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">plugins </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 2. restdocs-api-spec 플러그인 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id </span><span class="token string" style="color:#e3116c">'com.epages.restdocs-api-spec'</span><span class="token plain"> version </span><span class="token interpolation-string string" style="color:#e3116c">"</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token interpolation-string interpolation expression">restdocsApiSpecVersion</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token interpolation-string string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 3. swagger-generator 플러그인 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    id </span><span class="token string" style="color:#e3116c">'org.hidetake.swagger.generator'</span><span class="token plain"> version </span><span class="token string" style="color:#e3116c">'2.18.2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">dependencies<a href="#dependencies" class="hash-link" aria-label="Direct link to dependencies" title="Direct link to dependencies">​</a></h3><div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dependencies </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testImplementation </span><span class="token string" style="color:#e3116c">'io.rest-assured:rest-assured'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testImplementation </span><span class="token string" style="color:#e3116c">'org.springframework.restdocs:spring-restdocs-restassured'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testImplementation </span><span class="token interpolation-string string" style="color:#e3116c">"com.epages:restdocs-api-spec-restassured:</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token interpolation-string interpolation expression">restdocsApiSpecVersion</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token interpolation-string string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    testImplementation </span><span class="token interpolation-string string" style="color:#e3116c">"com.epages:restdocs-api-spec-mockmvc:</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token interpolation-string interpolation expression">restdocsApiSpecVersion</span><span class="token interpolation-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token interpolation-string string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    swaggerUI </span><span class="token string" style="color:#e3116c">'org.webjars:swagger-ui:4.11.1'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="플러그인태스크-설정">플러그인/태스크 설정<a href="#플러그인태스크-설정" class="hash-link" aria-label="Direct link to 플러그인/태스크 설정" title="Direct link to 플러그인/태스크 설정">​</a></h3><ul><li>openapi3 설정</li><li>스웨거 ui 생성</li><li>bootJar 설정</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="openapi3">openapi3<a href="#openapi3" class="hash-link" aria-label="Direct link to openapi3" title="Direct link to openapi3">​</a></h3><p>우선 restdocs-api-spec 의 설정을 해줄거예요.</p><div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">openapi3 </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4. open api 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setServer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token interpolation-string string" style="color:#e3116c">"http://localhost:8080"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4-1. 요청 보낼 서버의 baseUrl</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    title </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:#e3116c">"로지 API Docs"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4-2. 제목</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    description </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:#e3116c">"로지네 API 명세서"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4-3. 설명</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:#e3116c">"0.0.1"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4-4. api 문서의 버전</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    format </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:#e3116c">"yaml"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4-5. openapi 형식을 저장할 형식 (yaml/json)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>코드와 대응하는 화면을 보여드릴게요.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/6d7d35f8-1cc8-42fe-86c7-85615142d71b/image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="generateswaggerui-설정">GenerateSwaggerUI 설정<a href="#generateswaggerui-설정" class="hash-link" aria-label="Direct link to GenerateSwaggerUI 설정" title="Direct link to GenerateSwaggerUI 설정">​</a></h3><p>그리고 나서, swaggerUI 를 만드는 태스크를 정의해줍니다.
자세한 설명은 주석을 참고해주세요.</p><div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tasks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">withType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">GenerateSwaggerUI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 5. swaggerUI 를 생성하는 task들은 전부</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dependsOn </span><span class="token string" style="color:#e3116c">'openapi3'</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// openapi3 이 실행된 이후에 실행되도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">swaggerSources </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 6. swagger ui 생성에 필요한 source 설정.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rosieProject </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ⭐️ rosieProject(이름은 프로젝트에 맞도록 변경) 라는 스웨거 ui의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">setInputFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">file</span><span class="token punctuation" style="color:#393A34">(</span><span class="token interpolation-string string" style="color:#e3116c">"build/api-spec/openapi3.yaml"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 소스 위치를 설정. (현재는 default 위치)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 7. rosieProject 에 대한 swagger ui를 생성하는 task.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">generateSwaggerUIRosieProject </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    doLast </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ui 파일들이 생성되고 난 뒤</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        copy </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 정적 리소스 디렉토리로 복사</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            from outputDir</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            into </span><span class="token interpolation-string string" style="color:#e3116c">"src/main/resources/static/docs/"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 원하는 곳으로 하시면 돼요</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="bootjar-태스크-설정">bootJar 태스크 설정<a href="#bootjar-태스크-설정" class="hash-link" aria-label="Direct link to bootJar 태스크 설정" title="Direct link to bootJar 태스크 설정">​</a></h3><p>마지막으로, jar 패키징에 swagger ui가 포함될 수 있도록 설정해줍니다.</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bootJar </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dependsOn generateSwaggerUI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>만약 위 스크립트로 안되면</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bootJar </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dependsOn tasks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">withType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">GenerateSwaggerUI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이렇게 해보시면 됩니다.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="테스트-코드-작성">테스트 코드 작성<a href="#테스트-코드-작성" class="hash-link" aria-label="Direct link to 테스트 코드 작성" title="Direct link to 테스트 코드 작성">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="requestspecification-설정"><code>RequestSpecification</code> 설정<a href="#requestspecification-설정" class="hash-link" aria-label="Direct link to requestspecification-설정" title="Direct link to requestspecification-설정">​</a></h3><p>RestAssured에서 Restdocs를 사용하기 위해서, 저는 다음과 같이 추상클래스에서 RequestSpecification 필드를 관리하게 되었습니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token annotation punctuation" style="color:#393A34">@ExtendWith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token class-name">RestDocumentationExtension</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#4B0082">class</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">SpringExtension</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#4B0082">class</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@SpringBootTest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">webEnvironment </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">SpringBootTest</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">WebEnvironment</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">RANDOM_PORT</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#4B0082">public</span><span class="token plain"> </span><span class="token keyword" style="color:#4B0082">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#4B0082">class</span><span class="token plain"> </span><span class="token class-name">AcceptanceTest</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">protected</span><span class="token plain"> </span><span class="token class-name">RequestSpecification</span><span class="token plain"> spec</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#393A34">@LocalServerPort</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">private</span><span class="token plain"> </span><span class="token keyword" style="color:#4B0082">int</span><span class="token plain"> port</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#393A34">@BeforeEach</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">RestAssured</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">port </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> port</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token annotation punctuation" style="color:#393A34">@BeforeEach</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setUpRestDocs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RestDocumentationContextProvider</span><span class="token plain"> provider</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">RestAssuredOperationPreprocessorsConfigurer</span><span class="token plain"> filter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">documentationConfiguration</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">provider</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">operationPreprocessors</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#4B0082">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">spec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#4B0082">new</span><span class="token plain"> </span><span class="token class-name">RequestSpecBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setPort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">port</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addFilter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">build</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="restdocs가-설정된-requestspecification-사용하기">restdocs가 설정된 RequestSpecification 사용하기<a href="#restdocs가-설정된-requestspecification-사용하기" class="hash-link" aria-label="Direct link to restdocs가 설정된 RequestSpecification 사용하기" title="Direct link to restdocs가 설정된 RequestSpecification 사용하기">​</a></h3><p>restAssured 사용시, specification을 명시하지 않는 <code>given()</code> 을 이용하면 다음과 같이 매번 새로운 Specification을 사용합니다.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/e081e288-ee0b-4b9b-ad07-2a3ca6babf95/image.png" class="img_ev3q"></p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/81e43472-71c8-44e7-8428-12210ef7e33a/image.png" class="img_ev3q"></p><p>우리가 위에서 설정해준 spec 변수를 이용하기 위해서는 다음 방법으로 restAsscured를 사용해야합니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">spec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> given을 사용하지 않는경우</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">when</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">spec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="테스트-별로-생성할-문서-정의하기">테스트 별로 생성할 문서 정의하기<a href="#테스트-별로-생성할-문서-정의하기" class="hash-link" aria-label="Direct link to 테스트 별로 생성할 문서 정의하기" title="Direct link to 테스트 별로 생성할 문서 정의하기">​</a></h3><p>보통 restdocs를 asciidoc 으로 문서를 생성할 때는, 다음과 같이<code>RestAssuredRestDocumentation.document</code> 를 사용하는데요,</p><p>이 메서드를 restdocs-api-spec이 제공하는 wrapper 클래스의 메서드로 바꿔 사용합니다. (구현을 보면 많이 다를 건 없지만, 깃허브를 보면 openapi spec으로 변환할 때 편리함을 위해 제공한다고 합니다.)</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#4B0082">private</span><span class="token plain"> </span><span class="token class-name">ResourceSnippetDetails</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resourceDetails</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">summary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지월드 들어가기 API"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지 월드에 와서 환영을 받습니다."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#4B0082">void</span><span class="token plain"> 파라미터에_이름을_넣고_요청한다</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// given</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">var</span><span class="token plain"> 요청_준비 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">contentType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 여기입니다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                </span><span class="token class-name">RestAssuredRestDocumentationWrapper</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">document</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello-rosie-world-성공"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// when</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#4B0082">var</span><span class="token plain"> 응답 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 요청_준비</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">when</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pathParam</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"김크루"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/rosie/{name}"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    응답</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">assertThat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">statusCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">OK</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">value</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="같은-api에-대한-여러-요청응답">같은 API에 대한 여러 요청(응답)<a href="#같은-api에-대한-여러-요청응답" class="hash-link" aria-label="Direct link to 같은 API에 대한 여러 요청(응답)" title="Direct link to 같은 API에 대한 여러 요청(응답)">​</a></h3><p>같은 API에 대해서도, 여러 응답을 문서화해야하는데요. 이 작업은 별도의 작업이 필요하진 않습니다. 테스트별 document 메서드의 <strong>ResourceSnippetDetails 인자를 동일하게</strong> 설정해주면, 하나의 요청으로 간주하여 다음과같이 응답을 합쳐줍니다.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/0d87b552-21f4-4e69-89ca-0ebad67d59eb/image.png" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="document-사용법">document() 사용법<a href="#document-사용법" class="hash-link" aria-label="Direct link to document() 사용법" title="Direct link to document() 사용법">​</a></h2><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/cbc9078d-3f2a-461f-9433-39fed34fb201/image.png" class="img_ev3q"></p><p>restdocs-api-spec 모듈은 코틀린으로 작성되어서.. 참고하시며 작업하시길 바라구요.
어쨌든, document() 메서드에는 많은 인자들이 들어갈 수 있는데요. 각 인자가 어떤 요소에 대응되는지 정리해봤습니다.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="identifier-rest-docs-생성-파일-디렉토리명"><code>identifier</code>: rest docs 생성 파일 디렉토리명<a href="#identifier-rest-docs-생성-파일-디렉토리명" class="hash-link" aria-label="Direct link to identifier-rest-docs-생성-파일-디렉토리명" title="Direct link to identifier-rest-docs-생성-파일-디렉토리명">​</a></h3><p>document() 메서드의 첫번째 인자인데요, 이 아이는 restdocs에서 코드를 생성할 때 만들어지는 디렉토리의 이름이됩니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">contentType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">document</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello-rosie-world-성공"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이렇게 설정하고, 테스트를 통과한다면 설정한 이름의 디렉토리에 adoc 파일들이 생성된 것을 확인할 수 있어요.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/92dcaebd-5baf-4c59-aa2c-d499e04f1a80/image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="resourcedetails--api-정보"><code>resourceDetails</code> : API 정보<a href="#resourcedetails--api-정보" class="hash-link" aria-label="Direct link to resourcedetails--api-정보" title="Direct link to resourcedetails--api-정보">​</a></h3><p>API 정보는 <code>ResourceSnippetDetails</code> 클래스 로 정의합니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token class-name">ResourceSnippetDefails</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resourceDetails</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">summary</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지월드 들어가기 API"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지 월드에 와서 환영을 받습니다."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">given</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">contentType</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">document</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello-rosie-world-성공"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이 코드는 다음 화면에 대응돼요.</p><p><img loading="lazy" src="https://velog.velcdn.com/images/kyy00n/post/8be45ced-397d-4c9f-8ca4-8c3510c0154a/image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="requestprocessor--responseprocessor-요청응답에-적용할-프로세서"><code>requestProcessor</code> , <code>responseProcessor</code>: 요청/응답에 적용할 프로세서<a href="#requestprocessor--responseprocessor-요청응답에-적용할-프로세서" class="hash-link" aria-label="Direct link to requestprocessor--responseprocessor-요청응답에-적용할-프로세서" title="Direct link to requestprocessor--responseprocessor-요청응답에-적용할-프로세서">​</a></h3><p><code>OperationProcessor</code> 객체를 인자로 받습니다. OperationProcessor는 요청 또는 응답이 문서화되기 전에 적용하고 싶은 것을 정의할 수 있어요.</p><p>+) 프로세서는 다음과 같은 것들이 있어요: prettyPrint(), removeHeaders() 등..</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="snippeetfilters"><code>snippeetFilters</code><a href="#snippeetfilters" class="hash-link" aria-label="Direct link to snippeetfilters" title="Direct link to snippeetfilters">​</a></h3><p><code>Function&lt;List&lt;Snippet&gt;, List&lt;Snippet&gt;&gt;</code> 인데요, 변수명과 자료형을 보아 스니펫 리스트를 필터링하는데 사용하는 것 같습니다.</p><p>그러나 정확히 어떤 목적을 위한 변수인지는 모르겠습니다! 아시는 분은 알려주세요~
저는 쓸 필요를 못느껴서 Pass~</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="snippets--요청응답-예시-등-api-문서-조각에-쓰이는-모든-것"><code>snippets</code> : 요청/응답 예시 등 API 문서 조각에 쓰이는 모든 것<a href="#snippets--요청응답-예시-등-api-문서-조각에-쓰이는-모든-것" class="hash-link" aria-label="Direct link to snippets--요청응답-예시-등-api-문서-조각에-쓰이는-모든-것" title="Direct link to snippets--요청응답-예시-등-api-문서-조각에-쓰이는-모든-것">​</a></h3><p><code>org.springframework.restdocs.snippet</code> 에 정의돼있는 <code>Snippet</code> 객체를 가변 인자로 받아요.</p><p>저는 보통 다음과같이 요청 파라미터, 요청/응답 바디 Snippet을 활용하는 편입니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">document</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello-rosie-world-성공"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token constant" style="color:#36acaa">API_</span><span class="token plain">정보</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">responseSchema</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">성공_응답_형식</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 파라미터에 대한 snippet 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">pathParameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">parameterWithName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"놀러와주신 분의 성함"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 응답 바디에 대한 snippet 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">responseFields</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">fieldWithPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"messages"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"환영의 단어들"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">fieldWithPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ps"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">description</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"로지가 추가로 전하는 말"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">optional</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이외에도 Snippet은 여러가지 종류가 있는데요, 스니펫을 만들기 위해서는 <strong>지정된 정적 팩토리 메서드</strong>를 사용해야해서, 문서화가 필요한 대상의 키워드(ex. 쿼리파라미터, 헤더)로 <a href="https://docs.spring.io/spring-restdocs/docs/2.0.5.RELEASE/reference/html5/#documenting-your-api" target="_blank" rel="noopener noreferrer">restdocs 공식문서</a>에서 검색해보시면 쉽게 찾을 수 있습니다 :D</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="전체-코드">전체 코드<a href="#전체-코드" class="hash-link" aria-label="Direct link to 전체 코드" title="Direct link to 전체 코드">​</a></h2><p>전체 코드는 깃허브에 올려뒀습니다. 글에서 조각으로 보면 복잡한 것 같기도한데, 한번에 보면 괜찮은 것 같아요.</p><p><a href="https://github.com/kyY00n/restassured-restdocs-swaggerui" target="_blank" rel="noopener noreferrer">https://github.com/kyY00n/restassured-restdocs-swaggerui</a></p><hr><p>꽤 긴 튜토리얼이었는데요, 처음부터 꼼꼼히 읽기 보다는 초반에 소개드렸던 적용 흐름을 파악하시고, 디테일한 부분들은 공식문서와 함께 보는 것을 추천합니다 :D</p><p>여튼 읽어 주셔서 감사합니다.
올바르지 않거나 부족한 설명이 있다면 알려주세요!
여러분의 피드백을 격하게 환영합니다 :D</p><p>References</p><ul><li><a href="https://github.com/ePages-de/restdocs-api-spec" target="_blank" rel="noopener noreferrer">https://github.com/ePages-de/restdocs-api-spec</a></li><li><a href="https://github.com/int128/gradle-swagger-generator-plugin" target="_blank" rel="noopener noreferrer">https://github.com/int128/gradle-swagger-generator-plugin</a></li><li><a href="https://docs.spring.io/spring-restdocs/docs/current/reference/htmlsingle/#getting-started" target="_blank" rel="noopener noreferrer">https://docs.spring.io/spring-restdocs/docs/current/reference/htmlsingle/#getting-started</a></li></ul>]]></content:encoded>
            <category>RestAssured</category>
            <category>RestDocs</category>
            <category>SwaggerUI</category>
            <category>API문서</category>
        </item>
        <item>
            <title><![CDATA[집사의고민팀 Jacoco 적용기]]></title>
            <link>https://zip-go.github.io/blog/1</link>
            <guid>https://zip-go.github.io/blog/1</guid>
            <pubDate>Wed, 19 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[안녕하세요, 집사의고민팀 가비입니다.]]></description>
            <content:encoded><![CDATA[<p>안녕하세요, 집사의고민팀 가비입니다.</p><p>코드 커버리지를 위해 Jacoco를 적용한 과정에 대해 정리하고자 글을 작성하게 되었습니다.</p><p>코드 커버리지는 소프트웨어의 테스트 케이스가 얼마나 충족되었는지를 나타내는 지표 중 하나입니다. 테스트를 진행하였을 때 ‘코드 자체가 얼마나 실행되었느냐’는 것이고, 이는 수치를 통해 확인할 수 있는데요,
JVM 진영에서는 Jacoco를 통해 코드 커버리지를 체크할 수 있습니다. 뿐만 아니라 테스트 코드를 실행한 후, 그 커버리지 결과를 보기 좋도록 html이나 xml, csv같은 리포트 형태로 생성할 수도 있습니다.</p><ol><li>Jacoco 플러그인 추가</li></ol><p>Gradle 설정에 jacoco 플러그인을 추가하고, 버전 설정을 합니다. 저희 팀은 자바 17을 사용하기 때문에, 자바 17을 공식적으로 지원하는 0.8.8 버전을 적용하였습니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// builld.gradle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">plugins </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id </span><span class="token char">'jacoco'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacoco </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toolVersion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.8.8"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Gradle task 추가</li></ol><p>Jacoco의 Gradle 플러그인 중, <strong>jacocoTestReport</strong>와 <strong>jacocoTestCoverageVerification</strong> task를 이용하였습니다.</p><p>jacocoTestReport는 바이너리 형태의 커버리지 결과를 사람이 읽기 좋은 형태로 변환해줄 수 있는 task이고, jacocoTestCoverageVerification은 설정한 커버리지 기준을 만족하는지 검증할 수 있는 task입니다.</p><p>저희팀은 로컬에서 보기 쉽게, html 파일만을 변환하도록 하였고(추후 SonarQube를 적용한다면, xml 파일도 필요하겠죠?), 커버리지는 0.9 이상일 때만 빌드에 성공하도록 설정하였습니다. 그리고 DTO, Exception, MainApplication을 리포트 파일 및 커버리지 측정에서 제거하였습니다.</p><p>구체적인 내용은 주석으로 설명하겠습니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tasks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">named</span><span class="token punctuation" style="color:#393A34">(</span><span class="token char">'test'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">useJUnitPlatform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    finalizedBy 'jacocoTestReport' </span><span class="token comment" style="color:#999988;font-style:italic">// test task 실행 마지막에, jacocoTestReport를 실행하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacocoTestReport </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    reports </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        html</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">required </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// html 파일을 생성하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        html</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">destination </span><span class="token function" style="color:#d73a49">file</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"${buildDir}/jacoco/index.html"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 생성 경로 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    afterEvaluate </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        classDirectories</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">files</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">classDirectories</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">files</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">collect </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">fileTree</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dir</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> it</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> excludes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//  리포트 제외할 파일 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            '</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token comment" style="color:#999988;font-style:italic">/*Application*',</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">                            '**/</span><span class="token operator" style="color:#393A34">*</span><span class="token class-name">Exception</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            '</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token comment" style="color:#999988;font-style:italic">/*Response*',</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">                            '**/</span><span class="token operator" style="color:#393A34">*</span><span class="token class-name">Request</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    finalizedBy 'jacocoTestCoverageVerification' </span><span class="token comment" style="color:#999988;font-style:italic">// task 실행 마지막 단계에 jacocoTestCoverageVerification을 실행하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacocoTestCoverageVerification </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    violationRules </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rule </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            enabled </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 해당 rule을 적용할 것입니다</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            element </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CLASS"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 클래스 단위로</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            limit </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 라인 커버리지 단위를 0.9 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                counter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token char">'LINE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> '</span><span class="token constant" style="color:#36acaa">COVEREDRATIO</span><span class="token plain">' </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                minimum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.9</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            excludes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 커버리지 측정에서 제외할 파일들</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Application</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Exception</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Response</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Request</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>실행 결과</li></ol><p>테스트 실행시, 커버리지가 임의로 설정한 값(90%)를 넘지 못하면 실패하게 됩니다.</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/73161212/254122146-f9de550d-f3b8-44cd-947b-1eff03a704b2.png" alt="빌드 실패 결과" class="img_ev3q"></p><p>References</p><ul><li><a href="https://hudi.blog/dallog-jacoco/" target="_blank" rel="noopener noreferrer">https://hudi.blog/dallog-jacoco/</a></li><li><a href="https://techblog.woowahan.com/2661/" target="_blank" rel="noopener noreferrer">https://techblog.woowahan.com/2661/</a></li><li><a href="https://www.jacoco.org/jacoco/trunk/doc/changes.html" target="_blank" rel="noopener noreferrer">https://www.jacoco.org/jacoco/trunk/doc/changes.html</a></li></ul>]]></content:encoded>
            <category>backend</category>
            <category>java</category>
            <category>jacoco</category>
        </item>
    </channel>
</rss>