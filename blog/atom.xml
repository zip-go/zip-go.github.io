<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zip-go.github.io/blog</id>
    <title>집사의고민 Blog</title>
    <updated>2023-07-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zip-go.github.io/blog"/>
    <subtitle>집사의고민 Blog</subtitle>
    <icon>https://zip-go.github.io/img/logo.png</icon>
    <entry>
        <title type="html"><![CDATA[집사의고민팀 Jacoco 적용기]]></title>
        <id>https://zip-go.github.io/blog/1</id>
        <link href="https://zip-go.github.io/blog/1"/>
        <updated>2023-07-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[안녕하세요, 집사의고민팀 가비입니다.]]></summary>
        <content type="html"><![CDATA[<p>안녕하세요, 집사의고민팀 가비입니다.</p><p>코드 커버리지를 위해 Jacoco를 적용한 과정에 대해 정리하고자 글을 작성하게 되었습니다.</p><p>코드 커버리지는 소프트웨어의 테스트 케이스가 얼마나 충족되었는지를 나타내는 지표 중 하나입니다. 테스트를 진행하였을 때 ‘코드 자체가 얼마나 실행되었느냐’는 것이고, 이는 수치를 통해 확인할 수 있는데요,
JVM 진영에서는 Jacoco를 통해 코드 커버리지를 체크할 수 있습니다. 뿐만 아니라 테스트 코드를 실행한 후, 그 커버리지 결과를 보기 좋도록 html이나 xml, csv같은 리포트 형태로 생성할 수도 있습니다.</p><ol><li>Jacoco 플러그인 추가</li></ol><p>Gradle 설정에 jacoco 플러그인을 추가하고, 버전 설정을 합니다. 저희 팀은 자바 17을 사용하기 때문에, 자바 17을 공식적으로 지원하는 0.8.8 버전을 적용하였습니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// builld.gradle</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">plugins </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  id </span><span class="token char">'jacoco'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacoco </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toolVersion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.8.8"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>Gradle task 추가</li></ol><p>Jacoco의 Gradle 플러그인 중, <strong>jacocoTestReport</strong>와 <strong>jacocoTestCoverageVerification</strong> task를 이용하였습니다.</p><p>jacocoTestReport는 바이너리 형태의 커버리지 결과를 사람이 읽기 좋은 형태로 변환해줄 수 있는 task이고, jacocoTestCoverageVerification은 설정한 커버리지 기준을 만족하는지 검증할 수 있는 task입니다.</p><p>저희팀은 로컬에서 보기 쉽게, html 파일만을 변환하도록 하였고(추후 SonarQube를 적용한다면, xml 파일도 필요하겠죠?), 커버리지는 0.9 이상일 때만 빌드에 성공하도록 설정하였습니다. 그리고 DTO, Exception, MainApplication을 리포트 파일 및 커버리지 측정에서 제거하였습니다.</p><p>구체적인 내용은 주석으로 설명하겠습니다.</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tasks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">named</span><span class="token punctuation" style="color:#393A34">(</span><span class="token char">'test'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">useJUnitPlatform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    finalizedBy 'jacocoTestReport' </span><span class="token comment" style="color:#999988;font-style:italic">// test task 실행 마지막에, jacocoTestReport를 실행하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacocoTestReport </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    reports </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        html</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">required </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// html 파일을 생성하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        html</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">destination </span><span class="token function" style="color:#d73a49">file</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"${buildDir}/jacoco/index.html"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 생성 경로 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    afterEvaluate </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        classDirectories</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">files</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">classDirectories</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">files</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">collect </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">fileTree</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dir</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> it</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> excludes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//  리포트 제외할 파일 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            '</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token comment" style="color:#999988;font-style:italic">/*Application*',</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">                            '**/</span><span class="token operator" style="color:#393A34">*</span><span class="token class-name">Exception</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            '</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token comment" style="color:#999988;font-style:italic">/*Response*',</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">                            '**/</span><span class="token operator" style="color:#393A34">*</span><span class="token class-name">Request</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    finalizedBy 'jacocoTestCoverageVerification' </span><span class="token comment" style="color:#999988;font-style:italic">// task 실행 마지막 단계에 jacocoTestCoverageVerification을 실행하도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jacocoTestCoverageVerification </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    violationRules </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rule </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            enabled </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 해당 rule을 적용할 것입니다</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            element </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"CLASS"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 클래스 단위로</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            limit </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 라인 커버리지 단위를 0.9 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                counter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token char">'LINE'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> '</span><span class="token constant" style="color:#36acaa">COVEREDRATIO</span><span class="token plain">' </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                minimum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.9</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            excludes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 커버리지 측정에서 제외할 파일들</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Application</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Exception</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Response</span><span class="token plain">'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    '</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">*</span><span class="token class-name">Request</span><span class="token plain">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>실행 결과</li></ol><p>테스트 실행시, 커버리지가 임의로 설정한 값(90%)를 넘지 못하면 실패하게 됩니다.</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/73161212/254122146-f9de550d-f3b8-44cd-947b-1eff03a704b2.png" alt="빌드 실패 결과" class="img_ev3q"></p><p>References</p><ul><li><a href="https://hudi.blog/dallog-jacoco/" target="_blank" rel="noopener noreferrer">https://hudi.blog/dallog-jacoco/</a></li><li><a href="https://techblog.woowahan.com/2661/" target="_blank" rel="noopener noreferrer">https://techblog.woowahan.com/2661/</a></li><li><a href="https://www.jacoco.org/jacoco/trunk/doc/changes.html" target="_blank" rel="noopener noreferrer">https://www.jacoco.org/jacoco/trunk/doc/changes.html</a></li></ul>]]></content>
        <author>
            <name>BE_가비</name>
            <uri>https://github.com/iamjooon2</uri>
        </author>
        <category label="backend" term="backend"/>
        <category label="java" term="java"/>
        <category label="jacoco" term="jacoco"/>
    </entry>
</feed>